# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-18.04"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.username = 'vagrant'
  config.ssh.insert_key = false

  config.vm.provider :virtualbox do |v|
    v.memory = 1024
    v.cpus = 1
    v.linked_clone = true
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  
  # web1
  config.vm.define "web1" do |web1|
    web1.vm.hostname = "web1.test"
    web1.vm.network :private_network, ip: "192.168.33.11"
    web1.vm.provision "chef_client" do |chef| 
      chef.chef_server_url = "https://learn-chef.automate/organizations/chef_foundationsb"    
      chef.validation_key_path = "../learn-chef/.chef/user1.pem"   
      # chef.add_recipe "apache"
      chef.install = false
      chef.arguments = '--chef-license accept'
    end
  end

  # web2
  # config.vm.define "web2" do |web2|
  #   web2.vm.hostname = "web2.test"
  #   web2.vm.network :private_network, ip: "192.168.33.12"
  #   web2.vm.provision "chef_client" do |chef|    
  #     chef.cookbooks_path = "../chef-repo/cookbooks"
  #     chef.add_recipe "apache"
  #   end
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.

  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get upgrade -y
    sudo apt install ntp
    sudo vim /etc/ntp.conf
    
    # echo 192.168.33.199 chef-automate.test | sudo tee -a /etc/hosts
    SHELL
  
end
